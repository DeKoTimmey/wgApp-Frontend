{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nrequire('./index.css');\n\nvar _ic_back = require('./ic_back.svg');\n\nvar _ic_back2 = _interopRequireDefault(_ic_back);\n\nvar _ic_forward = require('./ic_forward.svg');\n\nvar _ic_forward2 = _interopRequireDefault(_ic_forward);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar config = {\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  month_subs: ['Jan', 'Feb', 'Apr', 'Mar', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n  weeks: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  week_subs: ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'],\n  today: function today() {\n    return new Date();\n  }\n};\nvar TODAY = config.today();\n\nvar Calendar = function (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar(props) {\n    _classCallCheck(this, Calendar);\n\n    var _this = _possibleConstructorReturn(this, (Calendar.__proto__ || Object.getPrototypeOf(Calendar)).call(this, props));\n\n    _this.state = {\n      current: config.today(),\n      selected: config.today(),\n      ldom: 30\n    };\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this.updateMonth(0);\n    }\n  }, {\n    key: 'updateMonth',\n    value: function updateMonth(add) {\n      var d = this.state.current;\n      d.setMonth(d.getMonth() + add);\n      var eom = new Date(d.getYear(), d.getMonth() + 1, 0).getDate();\n      this.setState({\n        current: d,\n        ldom: eom\n      });\n    }\n  }, {\n    key: 'prev',\n    value: function prev() {\n      this.updateMonth(-1);\n    }\n  }, {\n    key: 'next',\n    value: function next() {\n      this.updateMonth(1);\n    }\n  }, {\n    key: '_onDatePicked',\n    value: function _onDatePicked(month, day) {\n      var d = new Date(this.state.current.getTime());\n      d.setMonth(d.getMonth() + month);\n      d.setDate(day);\n      this.props.onDatePicked(d);\n      this.setState({\n        selected: d\n      });\n    }\n  }, {\n    key: 'renderDay',\n    value: function renderDay() {\n      var _this2 = this;\n\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var baseClasses = \"day noselect\";\n      var today = \"\";\n      var todayStyle = {};\n      var containerStyle = {};\n\n      if (opts.today) {\n        today = \"current\";\n        todayStyle = {\n          borderColor: this.props.accentColor\n        };\n      }\n\n      var selected = \"\";\n      var selectedStyle = {};\n\n      if (opts.selected) {\n        selected = \"selected\";\n        selectedStyle = {\n          backgroundColor: this.props.accentColor\n        };\n        containerStyle = {\n          color: '#ffffff'\n        };\n      }\n\n      baseClasses += opts.current ? \"\" : \" non-current\";\n      return _react2.default.createElement('div', {\n        className: baseClasses,\n        style: containerStyle\n      }, _react2.default.createElement('div', {\n        className: today,\n        style: todayStyle\n      }), _react2.default.createElement('div', {\n        className: selected,\n        style: selectedStyle\n      }), _react2.default.createElement('p', {\n        onClick: function onClick(ev) {\n          var day = ev.target.innerHTML;\n\n          _this2._onDatePicked(opts.month, day);\n        }\n      }, opts.date.getDate()));\n    }\n  }, {\n    key: 'renderDays',\n    value: function renderDays(copy) {\n      var days = []; // set to beginning of month\n\n      copy.setDate(1); // if we are missing no offset, include the previous week\n\n      var offset = copy.getDay() === 0 ? 7 : copy.getDay();\n      copy.setDate(-offset);\n      var inMonth = false;\n      var lastMonth = true;\n\n      for (var i = 0; i < 42; i++) {\n        // increase date\n        copy.setDate(copy.getDate() + 1); // make sure we pass any previous month values\n\n        if (i < 30 && copy.getDate() === 1) {\n          inMonth = true;\n          lastMonth = false;\n        } // if we are seeing the '1' again, we have iterated over\n        // the current month\n        else if (i > 30 && copy.getDate() === 1) {\n            inMonth = false;\n          }\n\n        var sel = new Date(this.state.selected.getTime());\n        var isSelected = sel.getFullYear() === copy.getFullYear() && sel.getDate() === copy.getDate() && sel.getMonth() === copy.getMonth();\n        var isToday = TODAY.getFullYear() === copy.getFullYear() && TODAY.getDate() === copy.getDate() && TODAY.getMonth() === copy.getMonth();\n        days.push(this.renderDay({\n          today: isToday,\n          selected: isSelected,\n          current: inMonth,\n          month: inMonth ? 0 : lastMonth ? -1 : 1,\n          date: copy\n        }));\n      }\n\n      return days;\n    }\n  }, {\n    key: 'renderHeaders',\n    value: function renderHeaders() {\n      var header = [];\n\n      for (var i = 0; i < config.week_subs.length; i++) {\n        header.push(_react2.default.createElement('p', {\n          className: 'day-headers noselect'\n        }, config.week_subs[i]));\n      }\n\n      return header;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      // get su-sat header\n      var header = this.renderHeaders(); // copy our current time state\n\n      var copy = new Date(this.state.current.getTime()); // get the month days\n\n      var days = this.renderDays(copy);\n      var tMonth = config.months[this.state.selected.getMonth()];\n      var tDate = this.state.selected.getDate();\n      var month = config.months[this.state.current.getMonth()];\n      var year = this.state.current.getFullYear();\n      var date = this.state.current.getDate();\n      var upperDate = null;\n\n      if (this.props.showHeader) {\n        upperDate = _react2.default.createElement('div', {\n          className: 'flex-2 header center',\n          style: {\n            backgroundColor: this.props.accentColor\n          }\n        }, _react2.default.createElement('p', {\n          className: 'header-month'\n        }, tMonth.toUpperCase()), _react2.default.createElement('p', {\n          className: 'header-day'\n        }, tDate));\n      }\n\n      return _react2.default.createElement('div', {\n        className: this.props.orientation\n      }, upperDate, _react2.default.createElement('div', {\n        className: 'padding'\n      }, _react2.default.createElement('div', {\n        className: 'month'\n      }, _react2.default.createElement('img', {\n        className: 'month-arrow-left',\n        src: _ic_back2.default,\n        alt: 'back',\n        onClick: this.prev.bind(this)\n      }), _react2.default.createElement('p', {\n        className: 'month-title'\n      }, month, _react2.default.createElement('br', null), _react2.default.createElement('span', {\n        className: 'month-year'\n      }, year)), _react2.default.createElement('img', {\n        className: 'month-arrow-right',\n        src: _ic_forward2.default,\n        alt: 'forward',\n        onClick: this.next.bind(this)\n      })), _react2.default.createElement('div', {\n        className: 'footer'\n      }, header, days)));\n    }\n  }]);\n\n  return Calendar;\n}(_react.Component);\n\n;\nCalendar.propTypes = {\n  accentColor: _propTypes2.default.string,\n  onDatePicked: _propTypes2.default.func,\n  showHeader: _propTypes2.default.bool,\n  orientation: _propTypes2.default.string\n};\nCalendar.defaultProps = {\n  accentColor: '#00C1A6',\n  onDatePicked: function onDatePicked() {},\n  showHeader: true,\n  orientation: 'flex-col'\n};\nexports.default = Calendar;","map":null,"metadata":{},"sourceType":"script"}