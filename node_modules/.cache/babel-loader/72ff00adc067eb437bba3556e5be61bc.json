{"ast":null,"code":"import _defineProperty from \"E:\\\\wgFrontend\\\\wgfrontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\wgFrontend\\\\wgfrontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\wgFrontend\\\\wgfrontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\wgFrontend\\\\wgfrontend\\\\src\\\\components\\\\switchBtn\\\\switchBtn.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    colorSwitchBase: {\n      color: purple[300],\n      '&$colorChecked': {\n        color: purple[500],\n        '& + $colorBar': {\n          backgroundColor: purple[500]\n        }\n      }\n    },\n    colorBar: {},\n    colorChecked: {},\n    iOSSwitchBase: {\n      '&$iOSChecked': {\n        color: theme.palette.common.white,\n        '& + $iOSBar': {\n          backgroundColor: '#52d869'\n        }\n      },\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n        easing: theme.transitions.easing.sharp\n      })\n    },\n    iOSChecked: {\n      transform: 'translateX(15px)',\n      '& + $iOSBar': {\n        opacity: 1,\n        border: 'none'\n      }\n    },\n    iOSBar: {\n      borderRadius: 13,\n      width: 42,\n      height: 26,\n      marginTop: -13,\n      marginLeft: -21,\n      border: 'solid 1px',\n      borderColor: theme.palette.grey[400],\n      backgroundColor: theme.palette.grey[50],\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border'])\n    },\n    iOSIcon: {\n      width: 24,\n      height: 24\n    },\n    iOSIconChecked: {\n      boxShadow: theme.shadows[1]\n    }\n  };\n});\n\nfunction Switches() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState({\n    checkedA: true,\n    checkedB: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setState(_objectSpread({}, state, _defineProperty({}, name, event.target.checked)));\n    };\n  };\n\n  return React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Switch, {\n      checked: state.checkedA,\n      onChange: handleChange('checkedA'),\n      value: \"checkedA\",\n      classes: {\n        switchBase: classes.colorSwitchBase,\n        checked: classes.colorChecked,\n        bar: classes.colorBar\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }),\n    label: \"Custom color\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Switch, {\n      classes: {\n        switchBase: classes.iOSSwitchBase,\n        bar: classes.iOSBar,\n        icon: classes.iOSIcon,\n        iconChecked: classes.iOSIconChecked,\n        checked: classes.iOSChecked\n      },\n      disableRipple: true,\n      checked: state.checkedB,\n      onChange: handleChange('checkedB'),\n      value: \"checkedB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }),\n    label: \"iOS style\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n}\n\nexport default Switches;","map":{"version":3,"sources":["E:\\wgFrontend\\wgfrontend\\src\\components\\switchBtn\\switchBtn.js"],"names":["React","makeStyles","purple","FormGroup","FormControlLabel","Switch","useStyles","theme","colorSwitchBase","color","backgroundColor","colorBar","colorChecked","iOSSwitchBase","palette","common","white","transition","transitions","create","duration","shortest","easing","sharp","iOSChecked","transform","opacity","border","iOSBar","borderRadius","width","height","marginTop","marginLeft","borderColor","grey","iOSIcon","iOSIconChecked","boxShadow","shadows","Switches","classes","useState","checkedA","checkedB","state","setState","handleChange","name","event","target","checked","switchBase","bar","icon","iconChecked"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  colorSwitchBase: {\r\n    color: purple[300],\r\n    '&$colorChecked': {\r\n      color: purple[500],\r\n      '& + $colorBar': {\r\n        backgroundColor: purple[500],\r\n      },\r\n    },\r\n  },\r\n  colorBar: {},\r\n  colorChecked: {},\r\n  iOSSwitchBase: {\r\n    '&$iOSChecked': {\r\n      color: theme.palette.common.white,\r\n      '& + $iOSBar': {\r\n        backgroundColor: '#52d869',\r\n      },\r\n    },\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n      easing: theme.transitions.easing.sharp,\r\n    }),\r\n  },\r\n  iOSChecked: {\r\n    transform: 'translateX(15px)',\r\n    '& + $iOSBar': {\r\n      opacity: 1,\r\n      border: 'none',\r\n    },\r\n  },\r\n  iOSBar: {\r\n    borderRadius: 13,\r\n    width: 42,\r\n    height: 26,\r\n    marginTop: -13,\r\n    marginLeft: -21,\r\n    border: 'solid 1px',\r\n    borderColor: theme.palette.grey[400],\r\n    backgroundColor: theme.palette.grey[50],\r\n    opacity: 1,\r\n    transition: theme.transitions.create(['background-color', 'border']),\r\n  },\r\n  iOSIcon: {\r\n    width: 24,\r\n    height: 24,\r\n  },\r\n  iOSIconChecked: {\r\n    boxShadow: theme.shadows[1],\r\n  },\r\n}));\r\n\r\nfunction Switches() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={state.checkedA}\r\n            onChange={handleChange('checkedA')}\r\n            value=\"checkedA\"\r\n            classes={{\r\n              switchBase: classes.colorSwitchBase,\r\n              checked: classes.colorChecked,\r\n              bar: classes.colorBar,\r\n            }}\r\n          />\r\n        }\r\n        label=\"Custom color\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            classes={{\r\n              switchBase: classes.iOSSwitchBase,\r\n              bar: classes.iOSBar,\r\n              icon: classes.iOSIcon,\r\n              iconChecked: classes.iOSIconChecked,\r\n              checked: classes.iOSChecked,\r\n            }}\r\n            disableRipple\r\n            checked={state.checkedB}\r\n            onChange={handleChange('checkedB')}\r\n            value=\"checkedB\"\r\n          />\r\n        }\r\n        label=\"iOS style\"\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default Switches;\r\n"]},"metadata":{},"sourceType":"module"}