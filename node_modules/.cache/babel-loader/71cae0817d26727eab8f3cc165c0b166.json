{"ast":null,"code":"import _classCallCheck from \"E:\\\\wgFrontend\\\\wgfrontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\wgFrontend\\\\wgfrontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\wgFrontend\\\\wgfrontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\wgFrontend\\\\wgfrontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\wgFrontend\\\\wgfrontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\wgFrontend\\\\wgfrontend\\\\src\\\\components\\\\switchBtn\\\\switchBtn.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nvar SwitchBtn =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SwitchBtn, _React$Component);\n\n  function SwitchBtn() {\n    _classCallCheck(this, SwitchBtn);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SwitchBtn).apply(this, arguments));\n  }\n\n  _createClass(SwitchBtn, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: state.checkedA,\n          onChange: handleChange(\"checkedA\"),\n          value: \"checkedA\",\n          classes: {\n            switchBase: classes.colorSwitchBase,\n            checked: classes.colorChecked,\n            bar: classes.colorBar\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }),\n        label: \"Custom color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          classes: {\n            switchBase: classes.iOSSwitchBase,\n            bar: classes.iOSBar,\n            icon: classes.iOSIcon,\n            iconChecked: classes.iOSIconChecked,\n            checked: classes.iOSChecked\n          },\n          disableRipple: true,\n          checked: state.checkedB,\n          onChange: handleChange(\"checkedB\"),\n          value: \"checkedB\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }),\n        label: \"iOS style\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SwitchBtn;\n}(React.Component);\n\nexport default SwitchBtn;","map":{"version":3,"sources":["E:\\wgFrontend\\wgfrontend\\src\\components\\switchBtn\\switchBtn.js"],"names":["React","makeStyles","purple","FormGroup","FormControlLabel","Switch","SwitchBtn","state","checkedA","handleChange","switchBase","classes","colorSwitchBase","checked","colorChecked","bar","colorBar","iOSSwitchBase","iOSBar","icon","iOSIcon","iconChecked","iOSIconChecked","iOSChecked","checkedB","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;IAGMC,S;;;;;;;;;;;;;6BACE;AACN,aACE,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AACE,QAAA,OAAO,EACL,oBAAC,MAAD;AACE,UAAA,OAAO,EAAEC,KAAK,CAACC,QADjB;AAEE,UAAA,QAAQ,EAAEC,YAAY,CAAC,UAAD,CAFxB;AAGE,UAAA,KAAK,EAAC,UAHR;AAIE,UAAA,OAAO,EAAE;AACPC,YAAAA,UAAU,EAAEC,OAAO,CAACC,eADb;AAEPC,YAAAA,OAAO,EAAEF,OAAO,CAACG,YAFV;AAGPC,YAAAA,GAAG,EAAEJ,OAAO,CAACK;AAHN,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaE,QAAA,KAAK,EAAC,cAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAgBE,oBAAC,gBAAD;AACE,QAAA,OAAO,EACL,oBAAC,MAAD;AACE,UAAA,OAAO,EAAE;AACPN,YAAAA,UAAU,EAAEC,OAAO,CAACM,aADb;AAEPF,YAAAA,GAAG,EAAEJ,OAAO,CAACO,MAFN;AAGPC,YAAAA,IAAI,EAAER,OAAO,CAACS,OAHP;AAIPC,YAAAA,WAAW,EAAEV,OAAO,CAACW,cAJd;AAKPT,YAAAA,OAAO,EAAEF,OAAO,CAACY;AALV,WADX;AAQE,UAAA,aAAa,MARf;AASE,UAAA,OAAO,EAAEhB,KAAK,CAACiB,QATjB;AAUE,UAAA,QAAQ,EAAEf,YAAY,CAAC,UAAD,CAVxB;AAWE,UAAA,KAAK,EAAC,UAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgBE,QAAA,KAAK,EAAC,WAhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,CADF;AAqCD;;;;EAvCuBT,KAAK,CAACyB,S;;AAyC9B,eAAenB,SAAf","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport purple from \"@material-ui/core/colors/purple\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\n\r\nclass SwitchBtn extends React.Component{\r\nrender(){\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={state.checkedA}\r\n            onChange={handleChange(\"checkedA\")}\r\n            value=\"checkedA\"\r\n            classes={{\r\n              switchBase: classes.colorSwitchBase,\r\n              checked: classes.colorChecked,\r\n              bar: classes.colorBar\r\n            }}\r\n          />\r\n        }\r\n        label=\"Custom color\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            classes={{\r\n              switchBase: classes.iOSSwitchBase,\r\n              bar: classes.iOSBar,\r\n              icon: classes.iOSIcon,\r\n              iconChecked: classes.iOSIconChecked,\r\n              checked: classes.iOSChecked\r\n            }}\r\n            disableRipple\r\n            checked={state.checkedB}\r\n            onChange={handleChange(\"checkedB\")}\r\n            value=\"checkedB\"\r\n          />\r\n        }\r\n        label=\"iOS style\"\r\n      />\r\n    </FormGroup>\r\n  );\r\n}}\r\n\r\nexport default SwitchBtn;\r\n"]},"metadata":{},"sourceType":"module"}